server:
  port: 0

spring:
  application:
    name: currency-exchange

  config:
    import: optional:configserver:http://localhost:8888

  jpa:
    show-sql: true
#    defer-datasource-initialization: true   -->> start up tables before loading script  -->> doesn't work anymore
  datasource:
    url: jdbc:h2:mem:testdb
  h2:
    console:
      enabled: true


  # sampling only a percentage of the request rather than every request 0.1 - 10%,
# though we want to sample all
  sleuth:
    sampler:
      probability: 1.0

#default
##spring.zipkin.base-url= http://localhost:9411/

#connect to naming server
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  # ensures all instances are registered when using random port
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
##multiple instances
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka,http://localhost:8762/eureka

#https://resilience4j.readme.io/docs/getting-started-3
resilience4j:
  retry:
    instances:
      # specific name for custom retry
      sample-api:
        max-attempts: 5
        wait-duration: 5s
        enable-exponential-backoff: true
  circuitbreaker:
    instances:
      # specific name for custom retry
      some-name:
        slow-call-duration-threshold: 100ms
  # allow 2 calls only in 10 seconds  --- we can change default to name used
  ratelimiter:
    instances:
      default:
        limit-for-period: 2
        limit-refresh-period: 10s

# total number of concurrent calls
  bulkhead:
    instances:
      default:
        max-concurrent-calls: 10

